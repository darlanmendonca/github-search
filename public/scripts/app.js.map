{"version":3,"sources":["app.js","config.js","routes.js","run.js","github/github.factory.js","github/github.service.js","auth/auth.config.js","login/login.controller.js","loading-bar/loading-bar.config.js","material/material.config.js","pagination/pagination.directive.js","search/search.controller.js"],"names":["config","routes","$locationProvider","$urlRouterProvider","$stateProvider","html5Mode","otherwise","state","url","templateUrl","controller","RunBlock","GitHubFactory","GitHubService","$q","githubSearch","type","query","page","d","defer","resolve","res","reject","get","q","per_page","promise","search","all","paginate","$resource","repositories","users","configAuth","$authProvider","github","clientId","authorizationEndpoint","redirectUri","window","location","origin","protocol","host","optionalUrlParams","scope","scopeDelimiter","popupOptions","width","height","LoginController","$scope","$auth","logged","isAuthenticated","toogleLogin","logout","authenticate","then","configLoadingBar","cfpLoadingBarProvider","includeSpinner","configMaterial","$mdThemingProvider","theme","primaryPalette","accentPalette","paginationDirective","restrict","require","replace","data","link","element","attributes","maxItensForPage","ngModel","$watch","value","old","pages","Array","Math","ceil","total_count","$parent","SearchController","$mdToast","err","status","showSimple","statusText","angular","module","$inject","run","factory","service","directive"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\nangular\n  .module('github-search', [\n    'ngAnimate',\n    'ngResource',\n    'ngSanitize',\n    'ngTouch',\n    'ui.router',\n    'angular-loading-bar',\n    'ngMaterial',\n    'satellizer'\n  ]);\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(config);\n\nfunction config () {\n\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(routes);\n\nfunction routes($locationProvider, $urlRouterProvider, $stateProvider) {\n  $locationProvider.html5Mode(true);\n  $urlRouterProvider.otherwise('/404');\n\n  $stateProvider\n    .state('search', {\n      url: '/',\n      templateUrl: 'templates/search.html',\n      controller: 'SearchController'\n    });\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .run(RunBlock);\n\nfunction RunBlock () {\n\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .factory('GitHubFactory', GitHubFactory);\n\nfunction GitHubFactory (GitHubService, $q) {\n\tvar githubSearch = function(type, query, page) {\n\t  var d = $q.defer();\n\t  page = page ? page : 1;\n\t  var resolve = function(res) {d.resolve(res);};\n\t  var reject = function(res) {d.reject(res);};\n  \tGitHubService[type].get({ q: query, page: page, 'per_page': 8}, resolve, reject);\n\t\treturn d.promise;\n\t};\n\n\n\treturn {\n\t\tsearch: function(query) {\n\t\t\treturn $q.all([\n\t\t\t\tgithubSearch('repositories', query),\n\t\t\t\tgithubSearch('users', query)\n\t\t\t]);\n\t\t},\n\t\tpaginate: function(type, query, page) {\n\t\t\treturn githubSearch(type, query, page);\n\t\t}\n\t};\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .service('GitHubService', GitHubService);\n\nfunction GitHubService ($resource) {\n\treturn {\n\t\trepositories: $resource('https://api.github.com/search/repositories'),\n\t\tusers: $resource('https://api.github.com/search/users')\n\t};\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(configAuth);\n\nfunction configAuth($authProvider) {\n\t$authProvider.github({\n    clientId: '7ba3653bf81205a7c30a',\n\t  url: 'api/auth/github',\n\t  authorizationEndpoint: 'https://github.com/login/oauth/authorize',\n\t  redirectUri: window.location.origin || window.location.protocol + '//' + window.location.host,\n\t  optionalUrlParams: ['scope'],\n\t  scope: ['user:email'],\n\t  scopeDelimiter: ' ',\n\t  type: '2.0',\n\t  popupOptions: { width: 1020, height: 510 }\n\t});\n}\n","'use strict';\n\nangular\n\t.module('github-search')\n\t.controller('LoginController', LoginController);\n\nfunction LoginController ($scope, $auth) {\n\t$scope.logged = $auth.isAuthenticated();\n\n\t$scope.toogleLogin = function() {\n\t\tif (!$scope.logged) {\n\t\t\t$auth\n\t\t\t\t.authenticate('github')\n\t\t\t\t.then(function() {\n\t\t\t\t\t$scope.logged = true;\n\t\t\t\t});\n\t\t} else {\n\t\t\t$auth.logout();\n\t\t\t$scope.logged = false;\n\t\t}\n\t};\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(configLoadingBar);\n\nfunction configLoadingBar (cfpLoadingBarProvider) {\n\t// disable spinner from angular-loading-bar\n\tcfpLoadingBarProvider.includeSpinner = false;\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(configMaterial);\n\nfunction configMaterial ($mdThemingProvider) {\n\t// matherial design theme\n\t$mdThemingProvider.theme('default')\n    .primaryPalette('blue')\n    .accentPalette('blue-grey');\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .directive('pagination', paginationDirective);\n\nfunction paginationDirective(GitHubFactory) {\n\treturn {\n\t\trestrict: 'EA',\n\t\ttemplateUrl: '/templates/pagination.template.html',\n\t\trequire: 'ngModel',\n\t\treplace: true,\n    scope: {\n      data: '=ngModel'\n    },\n    link: function(scope, element, attributes) {\n    \tvar maxItensForPage = 8;\n    \tvar type = attributes.ngModel;\n\n    \tscope.$watch('data', function(value, old) {\n    \t\tif (value && value !== old){\n\t\t    \tscope.pages = new Array(Math.ceil(scope.data.total_count / maxItensForPage));\n\n\t\t    \tscope.paginate = function(page) {\n\t\t\t\t  \tGitHubFactory\n\t\t\t\t  \t\t.paginate(type, scope.$parent.q, page)\n\t\t\t\t  \t\t.then(function(data) {\n\t\t\t\t  \t\t\tscope.$parent[type] = data;\n\t\t\t\t  \t\t});\n\t\t\t\t  };\n    \t\t}\n    \t});\n\t\t}\n\t};\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .controller('SearchController', SearchController);\n\nfunction SearchController ($scope, GitHubFactory, $mdToast) {\n  $scope.search = function() {\n  \tGitHubFactory\n  \t\t.search($scope.q)\n  \t\t.then(function(data) {\n  \t\t\t$scope.repositories = data[0];\n  \t\t\t$scope.users = data[1];\n  \t\t})\n  \t\t.catch(function(err) {\n  \t\t\tif (err.status === 403) {\n  \t\t\t\t$mdToast.showSimple('Heyy rapaz, calma awe, o Github n√£o libera tantas requests subsequentes, rs.');\n  \t\t\t} else {\n  \t\t\t\t$mdToast.showSimple('Unexpected error: '+err.statusText);\n  \t\t\t}\n  \t\t});\n  };\n}\n"],"sourceRoot":"/source/"}