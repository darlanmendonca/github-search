{"version":3,"sources":["app.js","config.js","routes.js","run.js","github/github.factory.js","github/github.service.js","search/search.controller.js"],"names":["config","cfpLoadingBarProvider","$mdThemingProvider","includeSpinner","theme","primaryPalette","accentPalette","routes","$locationProvider","$urlRouterProvider","$stateProvider","html5Mode","otherwise","state","url","templateUrl","controller","RunBlock","GitHubFactory","GitHubService","$q","githubSearch","type","query","page","d","defer","result","get","q","per_page","resolve","promise","search","all","paginate","$resource","repositories","users","SearchController","$scope","then","data","repositoriesPages","Array","Math","ceil","total_count","usersPages","tabSelected","change","angular","module","$inject","run","factory","service"],"mappings":"AAAA,YCMA,SAASA,QAAQC,sBAAuBC,oBAEvCD,sBAAsBE,gBAAiB,EAEvCD,mBAAmBE,MAAM,WACrBC,eAAe,QACfC,cAAc,aCNnB,QAASC,QAAOC,kBAAmBC,mBAAoBC,gBACrDF,kBAAkBG,WAAU,GAC5BF,mBAAmBG,UAAU,QAE7BF,eACGG,MAAM,UACLC,IAAK,IACLC,YAAa,wBACbC,WAAY,qBCRlB,QAASC,aCAT,QAASC,eAAeC,cAAeC,IACtC,GAAIC,cAAe,SAASC,KAAMC,MAAOC,MACvC,GAAIC,GAAIL,GAAGM,OACXF,MAAOA,KAAOA,KAAO,CACpB,IAAIG,QAASR,cAAcG,MAAMM,KAAMC,EAAGN,MAAOC,KAAMA,KAAMM,SAAY,GAAI,WAC5EL,EAAEM,QAAQJ,SAEb,OAAOF,GAAEO,QAIV,QACCC,OAAQ,SAASV,OAChB,MAAOH,IAAGc,KACTb,aAAa,eAAgBE,OAC7BF,aAAa,QAASE,UAGxBY,SAAU,SAASb,KAAMC,MAAOC,MAC/B,MAAOH,cAAaC,KAAMC,MAAOC,QCnBpC,QAASL,eAAeiB,WACvB,OACCC,aAAcD,UAAU,8CACxBE,MAAOF,UAAU,wCCHnB,QAASG,kBAAkBC,OAAQtB,eACjCsB,OAAOP,OAAS,WACff,cACEe,OAAOO,OAAOX,GACdY,KAAK,SAASC,MACdF,OAAOH,aAAeK,KAAK,GAC3BF,OAAOF,MAAQI,KAAK,GACpBF,OAAOG,kBAAoB,GAAIC,OAAMC,KAAKC,KAAKN,OAAOH,aAAaU,YAAc,IACjFP,OAAOQ,WAAa,GAAIJ,OAAMC,KAAKC,KAAKN,OAAOF,MAAMS,YAAc,IACnEP,OAAOS,YAAcT,OAAOH,aAAaU,YAAcP,OAAOF,MAAMS,YAAc,EAAI,KAIzFP,OAAOU,OAAS,SAAS5B,KAAME,MAC9BN,cACEiB,SAASb,KAAMkB,OAAOX,EAAGL,MACzBiB,KAAK,SAASC,MACdF,OAAOlB,MAAQoB,QNrBpBS,QACGC,OAAO,iBACN,YACA,YACA,aACA,aACA,UACA,YACA,sBACA,eCTJD,QACGC,OAAO,iBACPpD,OAAOA,QDwBVA,OAAOqD,SAAW,wBAAyB,sBE1B3CF,QACGC,OAAO,iBACPpD,OAAOO,QF2CVA,OAAO8C,SAAW,oBAAqB,qBAAsB,kBG7C7DF,QACGC,OAAO,iBACPE,IAAIrC,UCFPkC,QACGC,OAAO,iBACPG,QAAQ,gBAAiBrC,eJoF5BA,cAAcmC,SAAW,gBAAiB,MKtF1CF,QACGC,OAAO,iBACPI,QAAQ,gBAAiBrC,eLkG5BA,cAAckC,SAAW,aMpGzBF,QACGC,OAAO,iBACPpC,WAAW,mBAAoBuB,kBN+HlCA,iBAAiBc,SAAW,SAAU","file":"app.js","sourcesContent":["'use strict';\n\nangular\n  .module('github-search', [\n    'ngAnimate',\n    'ngCookies',\n    'ngResource',\n    'ngSanitize',\n    'ngTouch',\n    'ui.router',\n    'angular-loading-bar',\n    'ngMaterial'\n  ]);\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(config);\n\nfunction config (cfpLoadingBarProvider, $mdThemingProvider) {\n\t// disable spinner from angular-loading-bar\n\tcfpLoadingBarProvider.includeSpinner = false;\n\n\t$mdThemingProvider.theme('default')\n    .primaryPalette('blue')\n    .accentPalette('blue-grey');\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(routes);\n\nfunction routes($locationProvider, $urlRouterProvider, $stateProvider) {\n  $locationProvider.html5Mode(true);\n  $urlRouterProvider.otherwise('/404');\n\n  $stateProvider\n    .state('search', {\n      url: '/',\n      templateUrl: 'templates/search.html',\n      controller: 'SearchController'\n    });\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .run(RunBlock);\n\nfunction RunBlock () {\n\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .factory('GitHubFactory', GitHubFactory);\n\nfunction GitHubFactory (GitHubService, $q) {\n\tvar githubSearch = function(type, query, page) {\n\t  var d = $q.defer();\n\t  page = page ? page : 1;\n   \tvar result = GitHubService[type].get({ q: query, page: page, 'per_page': 8}, function() {\n    \td.resolve(result);\n  \t});\n\t\treturn d.promise;\n\t};\n\n\n\treturn {\n\t\tsearch: function(query) {\n\t\t\treturn $q.all([\n\t\t\t\tgithubSearch('repositories', query),\n\t\t\t\tgithubSearch('users', query)\n\t\t\t]);\n\t\t},\n\t\tpaginate: function(type, query, page) {\n\t\t\treturn githubSearch(type, query, page);\n\t\t}\n\t};\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .service('GitHubService', GitHubService);\n\nfunction GitHubService ($resource) {\n\treturn {\n\t\trepositories: $resource('https://api.github.com/search/repositories'),\n\t\tusers: $resource('https://api.github.com/search/users')\n\t};\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .controller('SearchController', SearchController);\n\nfunction SearchController ($scope, GitHubFactory) {\n  $scope.search = function() {\n  \tGitHubFactory\n  \t\t.search($scope.q)\n  \t\t.then(function(data) {\n  \t\t\t$scope.repositories = data[0];\n  \t\t\t$scope.users = data[1];\n\t\t  \t$scope.repositoriesPages = new Array(Math.ceil($scope.repositories.total_count / 8));\n\t\t  \t$scope.usersPages = new Array(Math.ceil($scope.users.total_count / 8));\n\t\t  \t$scope.tabSelected = $scope.repositories.total_count > $scope.users.total_count ? 0 : 1;\n  \t\t});\n  };\n\n  $scope.change = function(type, page) {\n  \tGitHubFactory\n  \t\t.paginate(type, $scope.q, page)\n  \t\t.then(function(data) {\n  \t\t\t$scope[type] = data;\n  \t\t});\n  };\n}\n"],"sourceRoot":"/source/"}