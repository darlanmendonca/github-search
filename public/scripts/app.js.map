{"version":3,"sources":["app.js","config.js","routes.js","run.js","auth/auth.config.js","github/github.factory.js","github/github.service.js","loading-bar/loading-bar.config.js","material/material.config.js","pagination/pagination.directive.js","search/search.controller.js"],"names":["config","routes","$locationProvider","$urlRouterProvider","$stateProvider","html5Mode","otherwise","state","url","templateUrl","controller","RunBlock","configAuth","$authProvider","github","clientId","authorizationEndpoint","redirectUri","window","location","origin","protocol","host","optionalUrlParams","scope","scopeDelimiter","type","popupOptions","width","height","GitHubFactory","GitHubService","$q","githubSearch","query","page","d","defer","resolve","res","reject","get","q","per_page","promise","search","all","paginate","$resource","repositories","users","configLoadingBar","cfpLoadingBarProvider","includeSpinner","configMaterial","$mdThemingProvider","theme","primaryPalette","accentPalette","paginationDirective","restrict","require","replace","data","link","element","attributes","maxItensForPage","ngModel","$watch","value","old","pages","Array","Math","ceil","total_count","$parent","then","SearchController","$scope","$auth","$mdToast","logged","isAuthenticated","loginLogout","logout","authenticate","console","log","items","err","status","showSimple","statusText","angular","module","$inject","run","factory","service","directive"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\nangular\n  .module('github-search', [\n    'ngAnimate',\n    'ngResource',\n    'ngSanitize',\n    'ngTouch',\n    'ui.router',\n    'angular-loading-bar',\n    'ngMaterial',\n    'satellizer'\n  ]);\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(config);\n\nfunction config () {\n\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(routes);\n\nfunction routes($locationProvider, $urlRouterProvider, $stateProvider) {\n  $locationProvider.html5Mode(true);\n  $urlRouterProvider.otherwise('/404');\n\n  $stateProvider\n    .state('search', {\n      url: '/',\n      templateUrl: 'templates/search.html',\n      controller: 'SearchController'\n    });\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .run(RunBlock);\n\nfunction RunBlock () {\n\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(configAuth);\n\nfunction configAuth($authProvider) {\n\t$authProvider.github({\n    clientId: '7ba3653bf81205a7c30a',\n\t  url: 'api/auth/github',\n\t  authorizationEndpoint: 'https://github.com/login/oauth/authorize',\n\t  redirectUri: window.location.origin || window.location.protocol + '//' + window.location.host,\n\t  optionalUrlParams: ['scope'],\n\t  scope: ['user:email'],\n\t  scopeDelimiter: ' ',\n\t  type: '2.0',\n\t  popupOptions: { width: 1020, height: 510 }\n\t});\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .factory('GitHubFactory', GitHubFactory);\n\nfunction GitHubFactory (GitHubService, $q) {\n\tvar githubSearch = function(type, query, page) {\n\t  var d = $q.defer();\n\t  page = page ? page : 1;\n\t  var resolve = function(res) {d.resolve(res);};\n\t  var reject = function(res) {d.reject(res);};\n  \tGitHubService[type].get({ q: query, page: page, 'per_page': 8}, resolve, reject);\n\t\treturn d.promise;\n\t};\n\n\n\treturn {\n\t\tsearch: function(query) {\n\t\t\treturn $q.all([\n\t\t\t\tgithubSearch('repositories', query),\n\t\t\t\tgithubSearch('users', query)\n\t\t\t]);\n\t\t},\n\t\tpaginate: function(type, query, page) {\n\t\t\treturn githubSearch(type, query, page);\n\t\t}\n\t};\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .service('GitHubService', GitHubService);\n\nfunction GitHubService ($resource) {\n\treturn {\n\t\trepositories: $resource('https://api.github.com/search/repositories'),\n\t\tusers: $resource('https://api.github.com/search/users')\n\t};\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(configLoadingBar);\n\nfunction configLoadingBar (cfpLoadingBarProvider) {\n\t// disable spinner from angular-loading-bar\n\tcfpLoadingBarProvider.includeSpinner = false;\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(configMaterial);\n\nfunction configMaterial ($mdThemingProvider) {\n\t// matherial design theme\n\t$mdThemingProvider.theme('default')\n    .primaryPalette('blue')\n    .accentPalette('blue-grey');\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .directive('pagination', paginationDirective);\n\nfunction paginationDirective(GitHubFactory) {\n\treturn {\n\t\trestrict: 'EA',\n\t\ttemplateUrl: '/templates/pagination.template.html',\n\t\trequire: 'ngModel',\n\t\treplace: true,\n    scope: {\n      data: '=ngModel'\n    },\n    link: function(scope, element, attributes) {\n    \tvar maxItensForPage = 8;\n    \tvar type = attributes.ngModel;\n\n    \tscope.$watch('data', function(value, old) {\n    \t\tif (value && value !== old){\n\t\t    \tscope.pages = new Array(Math.ceil(scope.data.total_count / maxItensForPage));\n\n\t\t    \tscope.paginate = function(page) {\n\t\t\t\t  \tGitHubFactory\n\t\t\t\t  \t\t.paginate(type, scope.$parent.q, page)\n\t\t\t\t  \t\t.then(function(data) {\n\t\t\t\t  \t\t\tscope.$parent[type] = data;\n\t\t\t\t  \t\t});\n\t\t\t\t  };\n    \t\t}\n    \t});\n\t\t}\n\t};\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .controller('SearchController', SearchController);\n\nfunction SearchController ($scope, GitHubFactory, $auth, $mdToast) {\n\t$scope.logged = $auth.isAuthenticated();\n\n\t$scope.loginLogout = function() {\n\t  if (!$scope.logged) {\n\t\t  $auth\n\t\t  \t.authenticate('github')\n\t\t  \t.then(function() {\n\t\t  \t\t$scope.logged = true;\n\t\t  \t});\n\t  } else {\n\t  \t$auth.logout();\n\t  \t$scope.logged = false;\n\t  }\n\t};\n\n  $scope.search = function() {\n  \tGitHubFactory\n  \t\t.search($scope.q)\n  \t\t.then(function(data) {\n  \t\t\t$scope.repositories = data[0];\n  \t\t\tconsole.log($scope.repositories.items[0]);\n  \t\t\t$scope.users = data[1];\n  \t\t})\n  \t\t.catch(function(err) {\n  \t\t\tif (err.status === 403) {\n  \t\t\t\t$mdToast.showSimple('Heyy rapaz, calma awe, o Github n√£o libera tantas requests subsequentes, rs.');\n  \t\t\t} else {\n  \t\t\t\t$mdToast.showSimple('Unexpected error: '+err.statusText);\n  \t\t\t}\n  \t\t});\n  };\n}\n"],"sourceRoot":"/source/"}