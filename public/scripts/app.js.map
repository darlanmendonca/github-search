{"version":3,"sources":["app.js","config.js","routes.js","run.js","github/github.factory.js","github/github.service.js","auth/auth.config.js","loading-bar/loading-bar.config.js","material/material.config.js","pagination/pagination.directive.js","search/search.controller.js"],"names":["config","routes","$locationProvider","$urlRouterProvider","$stateProvider","html5Mode","otherwise","state","url","templateUrl","controller","RunBlock","GitHubFactory","GitHubService","$q","githubSearch","type","query","page","d","defer","result","get","q","per_page","resolve","promise","search","all","paginate","$resource","repositories","users","configAuth","$authProvider","github","clientId","authorizationEndpoint","redirectUri","window","location","origin","protocol","host","optionalUrlParams","scope","scopeDelimiter","popupOptions","width","height","configLoadingBar","cfpLoadingBarProvider","includeSpinner","configMaterial","$mdThemingProvider","theme","primaryPalette","accentPalette","paginationDirective","restrict","require","replace","data","link","element","attributes","maxItensForPage","$watch","value","old","pages","Array","Math","ceil","total_count","ngModel","$parent","then","SearchController","$scope","$auth","authenticate","provider","isAuthenticated","repositoriesPages","usersPages","tabSelected","angular","module","$inject","run","factory","service","directive"],"mappings":"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","file":"app.js","sourcesContent":["'use strict';\n\nangular\n  .module('github-search', [\n    'ngAnimate',\n    'ngResource',\n    'ngSanitize',\n    'ngTouch',\n    'ui.router',\n    'angular-loading-bar',\n    'ngMaterial',\n    'satellizer'\n  ]);\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(config);\n\nfunction config () {\n\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(routes);\n\nfunction routes($locationProvider, $urlRouterProvider, $stateProvider) {\n  $locationProvider.html5Mode(true);\n  $urlRouterProvider.otherwise('/404');\n\n  $stateProvider\n    .state('search', {\n      url: '/',\n      templateUrl: 'templates/search.html',\n      controller: 'SearchController'\n    });\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .run(RunBlock);\n\nfunction RunBlock () {\n\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .factory('GitHubFactory', GitHubFactory);\n\nfunction GitHubFactory (GitHubService, $q) {\n\tvar githubSearch = function(type, query, page) {\n\t  var d = $q.defer();\n\t  page = page ? page : 1;\n   \tvar result = GitHubService[type].get({ q: query, page: page, 'per_page': 8}, function() {\n    \td.resolve(result);\n  \t});\n\t\treturn d.promise;\n\t};\n\n\n\treturn {\n\t\tsearch: function(query) {\n\t\t\treturn $q.all([\n\t\t\t\tgithubSearch('repositories', query),\n\t\t\t\tgithubSearch('users', query)\n\t\t\t]);\n\t\t},\n\t\tpaginate: function(type, query, page) {\n\t\t\treturn githubSearch(type, query, page);\n\t\t}\n\t};\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .service('GitHubService', GitHubService);\n\nfunction GitHubService ($resource) {\n\treturn {\n\t\trepositories: $resource('https://api.github.com/search/repositories'),\n\t\tusers: $resource('https://api.github.com/search/users')\n\t};\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(configAuth);\n\nfunction configAuth($authProvider) {\n\t$authProvider.github({\n    clientId: '7ba3653bf81205a7c30a',\n\t  url: 'api/auth/github',\n\t  authorizationEndpoint: 'https://github.com/login/oauth/authorize',\n\t  redirectUri: window.location.origin || window.location.protocol + '//' + window.location.host,\n\t  optionalUrlParams: ['scope'],\n\t  scope: ['user:email'],\n\t  scopeDelimiter: ' ',\n\t  type: '2.0',\n\t  popupOptions: { width: 1020, height: 510 }\n\t});\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(configLoadingBar);\n\nfunction configLoadingBar (cfpLoadingBarProvider) {\n\t// disable spinner from angular-loading-bar\n\tcfpLoadingBarProvider.includeSpinner = false;\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .config(configMaterial);\n\nfunction configMaterial ($mdThemingProvider) {\n\t// matherial design theme\n\t$mdThemingProvider.theme('default')\n    .primaryPalette('blue')\n    .accentPalette('blue-grey');\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .directive('pagination', paginationDirective);\n\nfunction paginationDirective(GitHubFactory) {\n\treturn {\n\t\trestrict: 'EA',\n\t\ttemplateUrl: '/templates/pagination.template.html',\n\t\trequire: 'ngModel',\n\t\treplace: true,\n    scope: {\n      data: '=ngModel'\n    },\n    link: function(scope, element, attributes) {\n    \tvar maxItensForPage = 8;\n\n    \tscope.$watch('data', function(value, old) {\n    \t\tif (value && value !== old){\n\t\t    \tscope.pages = new Array(Math.ceil(scope.data.total_count / maxItensForPage));\n    \t\t}\n    \t});\n\n    \tvar type = attributes.ngModel;\n\n    \tscope.paginate = function(page) {\n\t\t  \tGitHubFactory\n\t\t  \t\t.paginate(type, scope.$parent.q, page)\n\t\t  \t\t.then(function(data) {\n\t\t  \t\t\tscope.$parent[type] = data;\n\t\t  \t\t});\n\t\t  };\n\t\t}\n\t};\n}\n","'use strict';\n\nangular\n  .module('github-search')\n  .controller('SearchController', SearchController);\n\nfunction SearchController ($scope, GitHubFactory, $auth) {\n\t$scope.authenticate = function(provider) {\n    $auth.authenticate(provider);\n  };\n\n  if (!$auth.isAuthenticated()) {\n\t  $scope.authenticate('github');\n  }\n\n  $scope.search = function() {\n  \tGitHubFactory\n  \t\t.search($scope.q)\n  \t\t.then(function(data) {\n  \t\t\t$scope.repositories = data[0];\n  \t\t\t$scope.users = data[1];\n\t\t  \t$scope.repositoriesPages = new Array(Math.ceil($scope.repositories.total_count / 8));\n\t\t  \t$scope.usersPages = new Array(Math.ceil($scope.users.total_count / 8));\n\t\t  \t$scope.tabSelected = $scope.repositories.total_count > $scope.users.total_count ? 0 : 1;\n  \t\t});\n  };\n\n  // $scope.paginate = function(type, page) {\n  // \tGitHubFactory\n  // \t\t.paginate(type, $scope.q, page)\n  // \t\t.then(function(data) {\n  // \t\t\t$scope[type] = data;\n  // \t\t});\n  // };\n}\n"],"sourceRoot":"/source/"}